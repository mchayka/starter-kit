/* ==========================================================================
   Grid
   ========================================================================== */

// component default variables

$grid-child-font-family: "Helvetica Neue", Helvetica, Arial, "Nimbus Sans L", sans-serif !default;
$grid-gutter-default: 20px !default;

/**
 * Example HTML:
 *
 * <div class="grid [grid--gutterNone|grid--gutterSm] [grid--alignMiddle|grid--alignBottom]">
 *     <div class="grid-cell u-size2"></div>
 *     <div class="grid-cell u-size4"></div>
 *     <div class="grid-cell u-size2"></div>
 *     <div class="grid-cell u-size4"></div>
 * </div>
 */


/* Grid container
   ========================================================================== */

/**
 * All content must be contained within child `grid-cell` elements.
 *
 * 1. Remove extra space between 'inline-block' child elements
 * 2. Prevent grid collapse in all major devices
 */

.grid {
    box-sizing: border-box;
    display: block;
    margin-left: -$grid-gutter-default;
    margin-right: 0;
    padding-left: 0;
    padding-right: 0;
    letter-spacing: -0.31em; /* 1 */
    text-align: left;
    text-rendering: optimizespeed;
    font-family: FreeSans, Arimo, "Droid Sans", Helvetica, Arial, sans-serif; /* 2 */
    list-style: none;

    /**
     * Use flexbox when possible to avoid `letter-spacing` side-effects.
     */

    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: flext-start;
    direction: ltr;
}

/**
 * Opera hack for parent to prevent inline-block extra space
 */

.opera-only :-o-prefocus,
.grid {
    word-spacing: -0.43em;
}

/**
 * Modifiers: No gutter
 */

.grid--gutterNone {
    margin-left: 0;

    > .grid-cell {
        padding-left: 0;
    }
}

/**
 * Modifiers: grid cell alignment
 *
 * 1. For browsers with flexbox support
 */

.grid--alignMiddle {
    align-items: center; /* 1 */

    > .grid-cell {
        vertical-align: middle;
    }
}

.grid--alignBottom {
    align-items: flext-end; /* 1 */

    > .grid-cell {
        vertical-align: bottom;
    }
}

.grid--alignCenter {
    justify-content: center; /* 1 */
    text-align: center;
}

.grid--alignRight {
    justify-content: flex-end; /* 1 */
    text-align: right;
}

/* Grid cell
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a size & offset
 * utility.
 *
 * 1. Prevent collapsing when cell is empty
 * 2. Resets parent properties
 * 3. Resets the font family
 */

.grid-cell {
    display: inline-block;
    width: 100%;
    min-height: 1px; /* 1 */
    margin-left: 0;
    margin-right: 0;
    padding-left: $grid-gutter-default;
    padding-right: 0;
    vertical-align: top;
    text-align: left;

    text-rendering: auto; /* 2 */
    letter-spacing: normal; /* 2 */
    word-spacing: normal; /* 2 */
    font-family: $grid-child-font-family; /* 3 */
}